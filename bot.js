const TelegramBot = require("node-telegram-bot-api");
const { initializeApp } = require("firebase/app");
const { getDatabase, ref, set, get, child,update,remove } = require("firebase/database");
const dayjs = require("dayjs");
const axios = require("axios")
let last_username="–ê–∑–∏–∑";
let last_userid="";
const admins = ["7055406122","7965035846"]
const userTimers = {};
let managerstring="";
const firebaseConfig = {
  apiKey: "AIzaSyD2XAwoDZ994tR-ppf2w4G1gE_kIv7dH2Y",
  authDomain: "telegrambot1-9c41e.firebaseapp.com",
  projectId: "telegrambot1-9c41e",
  storageBucket: "telegrambot1-9c41e.firebasedatabase.app",
  messagingSenderId: "976285407857",
  appId: "1:976285407857:web:6afffb8ef7726c3668d9d0",
  measurementId: "G-VDPJXCGNRX",
  databaseURL: "https://telegrambot1-9c41e-default-rtdb.europe-west1.firebasedatabase.app",
};
const app = initializeApp(firebaseConfig);
const database = getDatabase(app);
const bot = new TelegramBot("7043917766:AAHDB8qj9_uMzDSIc7jY-r98P37diGGw9co", { polling: true });
const adminbot = new TelegramBot("7760163924:AAEdXY-WBT82M76Aj88ggtw-JConZ7Mejdw",{polling: true});
const questions = [
  "–í–∞–º –µ—Å—Ç—å 18 –ª–µ—Ç?",
  "–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –±–∏—Ä–∂–∏ –ø–æ —Ç–∏–ø—É Binance, Bybit, OKX?",
  "–ï—Å—Ç—å –æ–ø—ã—Ç –≤ P2P —Ç–æ—Ä–≥–æ–≤–ª–µ?",
];
async function checkUserById(userId) {

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ 'users'
    const usersRef = ref(database, 'users');
    const usersSnapshot = await get(usersRef);
    
    if (usersSnapshot.exists()) {
      const allUsers = usersSnapshot.val();
      
      // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –∏—â–µ–º –Ω—É–∂–Ω—ã–π userId
      for (const section in allUsers) {
        const sectionUsers = allUsers[section]; // –≠—Ç–æ –±—É–¥–µ—Ç –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ section (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'verified' –∏–ª–∏ 'not_verified')
        
        for (const userKey in sectionUsers) {
  

          if (sectionUsers[userKey] === userId.toString()) {
            console.log(`User found in ${section}:`, sectionUsers[userKey]);
            return true;
          }
        }
      }
    }

    console.log('User not found in any section.');
  } catch (error) {
    console.error('Error checking user:', error);
  }
}
async function getPhotos(path) {
  try {
    const dbRef = ref(database);
    const snapshot = await get(child(dbRef, path));
    if (snapshot.exists()) {
      return Object.values(snapshot.val()); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ —Ñ–æ—Ç–æ ID
      
    } else {
      console.log("–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
      return [];
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ Firebase:", error);
    return [];
  }
}
async function getValueByPath(path) {
  try {
    const dbRef = ref(database);
    const snapshot = await get(child(dbRef, path));
    if (snapshot.exists()) {
      return snapshot.val();
    } else {
      console.log(`–î–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ –ø—É—Ç–∏: ${path}`);
      return null;
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firebase:", error);
    return null;
  }
}
async function saveUserToNotVerified(username,userId) {
  try {
    const dbRef = ref(database, `users/not_verified/${username}`);
    await set(dbRef, userId.toString()); // –°–æ—Ö—Ä–∞–Ω—è–µ–º userId –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ not_verified:", error);
  }
}
adminbot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const username = msg.from.first_name;
  const usersRef = ref(database, `admins/${username}`);

  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    await set(usersRef, chatId);

  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
  }
});
let messages = {
  1: `–¢—ã –ø–æ—Ç–µ—Ä—è–ª 153$ üí∞

üòâ–ò–º–µ–Ω–Ω–æ —Ç–∞–∫—É—é —Å—É–º–º—É –≤—á–µ—Ä–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫.
–°–¥–µ–ª–∞–Ω–æ 5 —Å–≤–∞–ø–æ–≤ –Ω–∞ 5%, 4%, 1,5%, 3%, 1%, 

–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä —Å –±—é–¥–∂–µ—Ç–∞ –≤ 1000$ üí∂

1 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω HMSTR:  –æ—Ç–¥–∞–µ–º 1000$ - –ø–æ–ª—É—á–∞–µ–º 1050$

2 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω NOT: –æ—Ç–¥–∞–µ–º 1050$ - –ø–æ–ª—É—á–∞–µ–º 1092$

3 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω TRX: –æ—Ç–¥–∞–µ–º 1092$ - –ø–æ–ª—É—á–∞–µ–º 1108$

4 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω CATI: –æ—Ç–¥–∞–µ–º 1108 $ - –ø–æ–ª—É—á–∞–µ–º 1141.5$ 

5 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω BTC: –æ—Ç–¥–∞–µ–º 1141$ - –ø–æ–ª—É—á–∞–µ–º 1153$ 

‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî

–£–¥–µ–ª—è—è –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ –≤—Å–µ–≥–æ 2-5 —á–∞—Å–æ–≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –≤—ã –±—É–¥–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—Ç 150$ –ø—Ä–∏ –±—é–¥–∂–µ—Ç–µ –≤ 1000$. –ê —á—Ç–æ –µ—Å–ª–∏ –±—é–¥–∂–µ—Ç –±–æ–ª—å—à–µ, –∏–ª–∏ –∂–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å.

–≠—Ç–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –ø–æ–ª–Ω—ã–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º —Ä–∏—Å–∫–æ–≤ —Ç–∞–∫ –∫–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –±–∏—Ä–∂–∞–º–∏ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –æ–±–º–µ–Ω–Ω–∏–∫–∞–º–∏

‚û°Ô∏è—Å–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º - @

–ù–µ —É–ø—É—Å–∫–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ üöÄ`,
  2: `–¢—ã –ø–æ—Ç–µ—Ä—è–ª 307$$ üí∞

üòâ–ò–º–µ–Ω–Ω–æ —Ç–∞–∫—É—é —Å—É–º–º—É –≤—á–µ—Ä–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫.
–°–¥–µ–ª–∞–Ω–æ 9 —Å–≤–∞–ø–æ–≤ –Ω–∞ 2%, 3%, 1,8%, 3.3%, 1.6%, 4.7%, 3.1%, 5.5%, 2.3%

–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä —Å –±—é–¥–∂–µ—Ç–∞ –≤ 1000$ üí∂

1 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω LTC:  –æ—Ç–¥–∞–µ–º 1000$ - –ø–æ–ª—É—á–∞–µ–º 1020$

2 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω TON: –æ—Ç–¥–∞–µ–º 1020$ - –ø–æ–ª—É—á–∞–µ–º 1050$

3 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω DOGE: –æ—Ç–¥–∞–µ–º 1050$ - –ø–æ–ª—É—á–∞–µ–º 1069$

4 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω NOT: –æ—Ç–¥–∞–µ–º 1069$ - –ø–æ–ª—É—á–∞–µ–º 1104$ 

5 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω ETH: –æ—Ç–¥–∞–µ–º 1104$ - –ø–æ–ª—É—á–∞–µ–º 1122$ 

6 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω DOGS: –æ—Ç–¥–∞–µ–º 1122$ - –ø–æ–ª—É—á–∞–µ–º 1175$ 

7 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω TON: –æ—Ç–¥–∞–µ–º 1175$ - –ø–æ–ª—É—á–∞–µ–º 1211$ 

8 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω PIXFI: –æ—Ç–¥–∞–µ–º 1211$ - –ø–æ–ª—É—á–∞–µ–º 1278$ 

9 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω ATOM: –æ—Ç–¥–∞–µ–º 1278$ - –ø–æ–ª—É—á–∞–µ–º 1307$ 

‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî

–£–¥–µ–ª—è—è –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ –≤—Å–µ–≥–æ 2-5 —á–∞—Å–æ–≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –≤—ã –±—É–¥–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—Ç 150$ –ø—Ä–∏ –±—é–¥–∂–µ—Ç–µ –≤ 1000$. –ê —á—Ç–æ –µ—Å–ª–∏ –±—é–¥–∂–µ—Ç –±–æ–ª—å—à–µ, –∏–ª–∏ –∂–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å.

–≠—Ç–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –ø–æ–ª–Ω—ã–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º —Ä–∏—Å–∫–æ–≤ —Ç–∞–∫ –∫–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –±–∏—Ä–∂–∞–º–∏ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –æ–±–º–µ–Ω–Ω–∏–∫–∞–º–∏

‚û°Ô∏è—Å–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º - @

–ù–µ —É–ø—É—Å–∫–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ üöÄ`,
  3: `–¢—ã –ø–æ—Ç–µ—Ä—è–ª 165$$ üí∞

üòâ–ò–º–µ–Ω–Ω–æ —Ç–∞–∫—É—é —Å—É–º–º—É –≤—á–µ—Ä–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫.
–°–¥–µ–ª–∞–Ω–æ 3 —Å–≤–∞–ø–æ–≤ –Ω–∞
4.3%, 6%, 5.4%

–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä —Å –±—é–¥–∂–µ—Ç–∞ –≤ 1000$ üí∂

1 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω DOGS:  –æ—Ç–¥–∞–µ–º 1000$ - –ø–æ–ª—É—á–∞–µ–º 1043$

2 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω PEPE: –æ—Ç–¥–∞–µ–º 1043$ - –ø–æ–ª—É—á–∞–µ–º 1105$

3 –ö—Ä—É–≥, —Ç–æ–∫–µ–Ω HMSTR: –æ—Ç–¥–∞–µ–º 1105$ - –ø–æ–ª—É—á–∞–µ–º 1165$

‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî

–£–¥–µ–ª—è—è –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ –≤—Å–µ–≥–æ 2-5 —á–∞—Å–æ–≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –≤—ã –±—É–¥–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—Ç 150$ –ø—Ä–∏ –±—é–¥–∂–µ—Ç–µ –≤ 1000$. –ê —á—Ç–æ –µ—Å–ª–∏ –±—é–¥–∂–µ—Ç –±–æ–ª—å—à–µ, –∏–ª–∏ –∂–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å.

–≠—Ç–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –ø–æ–ª–Ω—ã–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º —Ä–∏—Å–∫–æ–≤ —Ç–∞–∫ –∫–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –±–∏—Ä–∂–∞–º–∏ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –æ–±–º–µ–Ω–Ω–∏–∫–∞–º–∏

‚û°Ô∏è—Å–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º - @

–ù–µ —É–ø—É—Å–∫–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ üöÄ`,
  4: `–ü—Ä–∏–≤–µ—Ç, –¢—ã –ø–æ—Ç–µ—Ä—è–ª —É–∂–µ –æ–∫–æ–ª–æ 1000$$ üí∞

–í—Å–µ –∫—Ç–æ –Ω–∞—á–∞–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è, —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Ö1.5-2 –æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –≤—Ö–æ–¥–∞

‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî

–£–¥–µ–ª—è—è –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ –≤—Å–µ–≥–æ 2-5 —á–∞—Å–æ–≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –≤—ã –±—É–¥–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—Ç 150$ –ø—Ä–∏ –±—é–¥–∂–µ—Ç–µ –≤ 1000$. –ê —á—Ç–æ –µ—Å–ª–∏ –±—é–¥–∂–µ—Ç –±–æ–ª—å—à–µ, –∏–ª–∏ –∂–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å.

–≠—Ç–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –ø–æ–ª–Ω—ã–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º —Ä–∏—Å–∫–æ–≤ —Ç–∞–∫ –∫–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –±–∏—Ä–∂–∞–º–∏ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –æ–±–º–µ–Ω–Ω–∏–∫–∞–º–∏

‚û°Ô∏è—Å–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º - @

–ù–µ —É–ø—É—Å–∫–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ üöÄ`,
  7: `–ü—Ä–∏–≤–µ—Ç, –≤–∏–∂—É —Ç–µ–±–µ –Ω–µ —Å–æ–≤—Å–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –Ω–æ —Ö–æ—á—É –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã.

–í–∑—è–ª–∏ –≤ –ø—Ä–∏–º–µ—Ä 3 —Ç—Ä–µ–π–¥–µ—Ä–∞, –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å—É–º–º–æ–π 1000$ üí∞

–ü–µ—Ä–≤—ã–π —Å–¥–µ–ª–∞–ª - 4568$, —á–∏—Å—Ç—ã–º–∏ 3568$ üöÄ

–í—Ç–æ—Ä–æ–π —Å–¥–µ–ª–∞–ª - 3920$, —á–∏—Å—Ç—ã–º–∏ 2920$ üöÄ

–¢—Ä–µ—Ç–∏–π —Å–¥–µ–ª–∞–ª - 3485$, —á–∏—Å—Ç—ã–º–∏ 2485$ üöÄ

–•–æ—á–µ—à—å –¥–µ–ª–∞—Ç—å —Ç–∞–∫–∏–µ –∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã ?

–ù–∞–ø–∏—à–∏ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @ ¬´‚ûï¬ª –≤ –õ–°`,
  15: `–ü—Ä–∏–≤–µ—Çüëã

–°–Ω–æ–≤–∞ —Ö–æ—á—É –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã.

–í–∑—è–ª–∏ –≤ –ø—Ä–∏–º–µ—Ä 3 —Ç—Ä–µ–π–¥–µ—Ä–∞, –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å—É–º–º–æ–π 1000$ üí∞

–ü–µ—Ä–≤—ã–π —Å–¥–µ–ª–∞–ª - 10290$, —á–∏—Å—Ç—ã–º–∏ 9290$ üöÄ

–í—Ç–æ—Ä–æ–π —Å–¥–µ–ª–∞–ª - 11850$, —á–∏—Å—Ç—ã–º–∏ 10850$ üöÄ

–¢—Ä–µ—Ç–∏–π —Å–¥–µ–ª–∞–ª - 8697$, —á–∏—Å—Ç—ã–º–∏ 7697$ üöÄ

–•–æ—á–µ—à—å –¥–µ–ª–∞—Ç—å —Ç–∞–∫–∏–µ –∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã ?

–ù–∞–ø–∏—à–∏ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @ ¬´‚ûï¬ª –≤ –õ–°`,
};

async function startMessageFlow(userId) {
  managerstring = await getValueByPath("glav_admin")
  // –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —É–∂–µ –∑–∞–ø—É—â–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
  if (userTimers[userId]) {
    console.log(`–î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} —É–∂–µ –∑–∞–ø—É—â–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å.`);
    return;
  }

  console.log(`–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);

  // –î–∞—Ç–∞ —Å—Ç–∞—Ä—Ç–∞ –æ—Ç—Å—á–µ—Ç–∞
  const startDate = dayjs();

  // –ú–∞—Å—Å–∏–≤ –¥–Ω–µ–π, –∫–æ–≥–¥–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è
  const daysToSend = Object.keys(messages).map(Number);

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è
  userTimers[userId] = [];
  for (const day of daysToSend) {
    const delay =day*24*60*60*1000; // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–Ω–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
    const photos = await getPhotos("photos"+day.toString());
    console.log(day)
    const mediaGroup = await Promise.all(
      photos.map(async (fileId) => {
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        const file = await adminbot.getFile(fileId);
        const fileUrl = `https://api.telegram.org/file/bot${"7760163924:AAEdXY-WBT82M76Aj88ggtw-JConZ7Mejdw"}/${file.file_path}`;
    
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ –ø–æ—Ç–æ–∫
        const response = await axios.get(fileUrl, { responseType: "stream" });
    
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è MediaGroup
        return {
          type: "photo",
          media: response.data, // –ü–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        };
      })
    );


    
    const timer = setTimeout(async () => {
      const message = messages[day].replace("@",managerstring);
      console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId} –Ω–∞ –¥–µ–Ω—å ${day}: ${message}`);
      // –ó–¥–µ—Å—å –≤—ã–∑–æ–≤–∏—Ç–µ –≤–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä:
      
      bot.sendMediaGroup(userId,mediaGroup);
      
      await bot.sendMessage(userId,message);
      
      // –£–¥–∞–ª—è–µ–º —Ç–∞–π–º–µ—Ä –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞, –µ—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å
      if (day === Math.max(...daysToSend)) {
        console.log(`–ü—Ä–æ—Ü–µ—Å—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –∑–∞–≤–µ—Ä—à–µ–Ω.`);
        delete userTimers[userId];
      }
    }, delay);

    userTimers[userId].push(timer);
  }

  console.log(`–ü—Ä–æ—Ü–µ—Å—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.`);
}

async function sendMessageToAll() {
  const db = database;
  const usersRef = ref(db, "admins");
  const usersSnapshot = await get(usersRef);

  if (usersSnapshot.exists()) {
    const users = usersSnapshot.val();

    for (const userId in users) {
      const telegramId = users[userId];

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
      adminbot.sendMessage(telegramId, last_username+" –ø—Ä–æ—à–µ–ª –∫–≤–∏–∑. –û–Ω –≤–∞–º –Ω–∞–ø–∏—Å–∞–ª?", {
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "–¥–∞",
                callback_data: `verify_${telegramId}`, // Callback –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
              },{
                text: "–Ω–µ—Ç",
                callback_data: `not_verify_${telegramId}`, // Callback –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
              },
            ],
          ],
        },
      });
    }
  } else {
    console.log("No users in not_verified.");
  }
}

adminbot.on('callback_query', async (query) => {
  const chatId = query.message.chat.id;
  const data = query.data;
  db = database;
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  if (data.startsWith('verify')) {

    try {
      console.log(last_username,last_userid)
      const userRef = ref(db, `users/not_verified/`);
      const snapshot = await get(userRef);

      if (snapshot.exists()) {
        const userData = snapshot.val();

        // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ verified
        const verifiedRef = ref(db, `users/verified/`);
        await update(verifiedRef, userData);

        // –£–¥–∞–ª—è–µ–º –∏–∑ not_verified
        await remove(userRef);

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        adminbot.sendMessage(chatId, "—Å—Ç–∞—Ç—É—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!");
      } else {
        adminbot.sendMessage(chatId, "—Å—Ç–∞—Ç—É—Å —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –∏–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:', error);
      adminbot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏.");
    }
  }
  else if(data.startsWith('not_verify')){
   await startMessageFlow(last_userid);
  }
});







bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const community = await getValueByPath("community");
  const isUserQuizCompleted = await checkUserById(userId);
  
  const photos = await getPhotos("photos");
  
  if (isUserQuizCompleted) {
    managerstring = await getValueByPath("glav_admin")
      
    
    bot.sendMessage(chatId, "–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –∫–≤–∏–∑. –ù–∞–ø–∏—à–∏—Ç–µ + –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É "+managerstring);
    return;
  }
  else{
    const mediaGroup = await Promise.all(
      photos.map(async (fileId) => {
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        const file = await adminbot.getFile(fileId);
        const fileUrl = `https://api.telegram.org/file/bot${"7760163924:AAEdXY-WBT82M76Aj88ggtw-JConZ7Mejdw"}/${file.file_path}`;
    
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ –ø–æ—Ç–æ–∫
        const response = await axios.get(fileUrl, { responseType: "stream" });
    
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è MediaGroup
        return {
          type: "photo",
          media: response.data, // –ü–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        };
      })
    );


    await bot.sendMediaGroup(chatId,mediaGroup);
  
    
  const options = {
    parse_mode: "Markdown",
    reply_markup: {
      inline_keyboard: [
        [{ text: "–ù–∞—á–∞—Ç—å –∫–≤–∏–∑", callback_data: "start_quiz" }]
      ]
    }
  };

    bot.sendMessage(
      chatId,
      `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é üëã, —ç—Ç–æ –±–æ—Ç\n–°–æ–æ–±—â–µ—Å—Ç–≤–∞ [CryptoForce](${community}) üí∞\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∏ –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç—ã–º –æ–±–º–µ–Ω–Ω–∏–∫–∞–º –ë–ï–°–ü–õ–ê–¢–ù–û –≤–∞–º –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç—Ä–∏ –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–∞üöÄ\n‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è`,
      options
    );
  }
});


bot.on("callback_query", async (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const userId = callbackQuery.from.id;
  const username = callbackQuery.from.first_name;
  const action = callbackQuery.data;
  const admin = await getValueByPath("glav_admin")
  const community = await getValueByPath("community")
  if (action === "start_quiz") {

    let previousMessageId = null;
  


      let questionIndex = 0;

      const sendQuestion = async (index, previousMessageId) => {
        if (previousMessageId) {
          try {
            await bot.deleteMessage(chatId, previousMessageId);
          } catch (err) {
            console.log("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", err);
          }
        }

        if (index < questions.length) {
          const options = {
            reply_markup: {
              inline_keyboard: [
                [{ text: "–î–∞", callback_data: `answer_yes_${index}` }, { text: "–ù–µ—Ç", callback_data: `answer_no_${index}` }]
              ]
            }
          };

          const sentMessage = await bot.sendMessage(chatId, questions[index], options);
          return sentMessage.message_id;
        } else {
          await bot.sendMessage(chatId, "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã üéâ\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ '‚ûï' –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É "+admin+"   –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ \n–ù–∞—à –∫–∞–Ω–∞–ª –ø–æ –û–±–º–µ–Ω—É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è\n[–ü–û–î–ü–ò–°–ê–¢–¨–°–Ø]("+community+")",{parse_mode: "Markdown"});
          await saveUserToNotVerified(username,userId); 
           last_username = username;
          last_userid = userId;
          sendMessageToAll();
          return null;
        }
      };


      previousMessageId = await sendQuestion(questionIndex, previousMessageId);

      bot.on("callback_query", async (callbackQuery) => {
        const userAnswer = callbackQuery.data;
        const index = parseInt(userAnswer.split("_")[2]);

        if (questionIndex < questions.length) {
          questionIndex++;
          previousMessageId = await sendQuestion(questionIndex, previousMessageId);
        } else {
          try {
            await bot.deleteMessage(chatId, previousMessageId);
          } catch (err) {
            console.log("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å:", err);
          }
          
        
        }

        bot.answerCallbackQuery(callbackQuery.id, {
          text: "–û—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç!",
          show_alert: false,
          
        });
      });
    }
  }
);

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let userState = {};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞, –≤—ã–≤–æ–¥–∏—Ç 9 –∫–Ω–æ–ø–æ–∫
adminbot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  if(admins.includes(chatId.toString())){
  const options = {
    reply_markup: {
      keyboard: [
        ['–î–µ–Ω—å 1', '–î–µ–Ω—å 2', '–î–µ–Ω—å 3'],
        ['–î–µ–Ω—å 4', '–î–µ–Ω—å 7', '–î–µ–Ω—å 15'],
        ['–î–µ–Ω—å 0', '–ê–¥–º–∏–Ω', '–°–æ–æ–±—â–µ—Å—Ç–≤–æ']
      ],
      resize_keyboard: true,
      one_time_keyboard: true,
    }
  };
  adminbot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –∏–ª–∏ —Ä–∞–∑–¥–µ–ª:', options);
}else{
  adminbot.sendMessage(chatId, '—É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞',);

}
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ "–î–µ–Ω—å 1", "–î–µ–Ω—å 2" –∏ —Ç.–¥.
adminbot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
  if(admins.includes(chatId.toString())){
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ msg.text —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π
  if (typeof text === 'string') {
    // –ï—Å–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    if (userState[chatId] && userState[chatId].waitingForPhoto) {
      return; // –ï—Å–ª–∏ –±–æ—Ç —É–∂–µ –æ–∂–∏–¥–∞–µ—Ç —Ñ–æ—Ç–æ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "–î–µ–Ω—å 0"
    if (text === '–î–µ–Ω—å 0') {
      const dayRef = 'photos'; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–ª—é—á 'photos'
  
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ –±–æ—Ç –æ–∂–∏–¥–∞–µ—Ç —Ñ–æ—Ç–æ
      userState[chatId] = { waitingForPhoto: true };
  
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      adminbot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ  3 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –î–µ–Ω—å 0.');
  
      // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ
      const photoIds = [];
  
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–±–æ—Ä–∞ –≤—Å–µ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
      const photoListener = adminbot.on('photo', async (photoMsg) => {
          // –î–æ—Å—Ç–∞–µ–º –º–∞—Å—Å–∏–≤ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
          const photos = photoMsg.photo;
  
          if (photos && photos.length > 0) {
              // –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º
              const photoId = photos[photos.length - 1].file_id;
  
              // –î–æ–±–∞–≤–ª—è–µ–º `file_id` –≤ —Å–ø–∏—Å–æ–∫
              photoIds.push(photoId);
  
              // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –æ–±—Ä–∞—Ç–Ω–æ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –æ–Ω–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
              
          }
  
          // –ï—Å–ª–∏ —Å–æ–±—Ä–∞–ª–∏ 3 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ
          if (photoIds.length >= 3) {
              // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ Firebase
              const photosRefPath = ref(database, `/photos`);
              await remove(photosRefPath);
  
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ `photoIds` –≤ Firebase
              await set(ref(database, `/photos`), photoIds);
  
              // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
              await adminbot.sendMessage(chatId, '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –î–µ–Ω—å 0 —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
  
              // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              userState[chatId].waitingForPhoto = false;
  
              // –£–±–∏—Ä–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
              adminbot.removeListener('photo', photoListener);
          }
      });
  }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ "–î–µ–Ω—å 1", "–î–µ–Ω—å 2", ... "–î–µ–Ω—å 15"
    else if (text.startsWith('–î–µ–Ω—å')) {
      const day = text.split(' ')[1]; // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –¥–Ω—è (1, 2, 3 –∏ —Ç.–¥.)
      const dayRef = `photos${day}`; // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª—é—á –¥–ª—è Firebase
  
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ –±–æ—Ç –æ–∂–∏–¥–∞–µ—Ç —Ñ–æ—Ç–æ
      userState[chatId] = { waitingForPhoto: true };
  
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      adminbot.sendMessage(chatId, `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ 3 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –î–µ–Ω—å ${day}.`);
  
      // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
      const photoIds = [];
  
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
      const photoListener = adminbot.on('photo', async (photoMsg) => {
          const photos = photoMsg.photo;
  
          if (photos && photos.length > 0) {
              // –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º
              const photoId = photos[photos.length - 1].file_id;
  
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π `file_id`
              photoIds.push(photoId);
  
              // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
             
          }
  
          // –ï—Å–ª–∏ —Å–æ–±—Ä–∞–Ω–æ 3 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∑–∞–≤–µ—Ä—à–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ
          if (photoIds.length >= 3) {
              // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ Firebase
              const dayRefPath = ref(database, `/${dayRef}`);
              await remove(dayRefPath);
  
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
              await set(ref(database, `/${dayRef}`), photoIds);
  
              // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± —É—Å–ø–µ—Ö–µ
              await adminbot.sendMessage(chatId, `–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –î–µ–Ω—å ${day} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.`);
  
              // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
              userState[chatId].waitingForPhoto = false;
  
              // –£–±–∏—Ä–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å
              adminbot.removeListener('photo', photoListener);
          }
      });
  }
  

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–æ–æ–±—â–µ—Å—Ç–≤–æ"
    if (text === '–°–æ–æ–±—â–µ—Å—Ç–≤–æ') {
      adminbot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.');
      adminbot.once('message', async (communityMsg) => {
        const communityMessage = communityMsg.text;
        const communityRef = ref(database, '/community');
        await set(communityRef, communityMessage);
        adminbot.sendMessage(chatId, '–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.');
      });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ê–¥–º–∏–Ω"
    if (text === '–ê–¥–º–∏–Ω') {
      adminbot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞.');
      adminbot.once('message', async (adminMsg) => {
        const adminMessage = adminMsg.text;
        const adminRef = ref(database, '/glav_admin');
        await set(adminRef, adminMessage);
        adminbot.sendMessage(chatId, '–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.');
      });
    }
  }}else{
  adminbot.sendMessage(chatId, '—É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞');
    
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ polling
adminbot.on('polling_error', (error) => {
  console.error('Polling error:', error);
});
